name: Build RMX3461-SM7325 (nika) Kernel

on:
  workflow_dispatch:

env:
  TZ: Asia/Kolkata

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Remove unused packages
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: false
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: false
      
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Kolkata date "+%y%m%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 libncurses-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python3
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
        tar -C clang-aosp/ -zxvf clang-r522817.tar.gz
    
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/Debarpan102/kernel_oplus_RMX3461 -b stable-r2 android-kernel --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion
        
    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
        DEFCONFIG="vendor/lahaina-qgki_defconfig"
        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD
        make modules_install -j$(nproc --all) 
        make modules_install INSTALL_MOD_PATH=/out/modules
        
    - name: Verify kernel modules exist
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        MODULES_DIR="android-kernel/out/modules/lib/modules/5.4.292/kernel/"
        if [ $(find "$MODULES_DIR" -name "*.ko*" 2>/dev/null | wc -l) -gt 0 ]; then
        echo "CHECK_MODULES=true" >> $GITHUB_ENV
        echo "Found kernel modules in $MODULES_DIR"
        else
        echo "::error::No kernel modules found in $MODULES_DIR"
        echo "Directory contents:"
        ls -laR "$MODULES_DIR" || true
        exit 1
        fi
    
    - name: Make Anykernel3
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3 --depth=1 AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=0;/IS_SLOT_DEVICE=auto;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/modules/lib/modules/5.4.254/* AnyKernel3/
        rm -rf AnyKernel3/.git* AnyKernel3/README.md

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AK3-ksu-next-Unofficial-RMX3461-SM7325(nika)-${{ env.KSUVER }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*

    
